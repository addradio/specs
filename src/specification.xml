<?xml version="1.0" standalone="no"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2.0//EN"
               "http://docbook.org/xml/4.2/docbookx.dtd">

<book xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Technical specification for interfacing with the AddRadio network</title>
    <chapter>
        <title>General communication with Icecast2</title>
        <para>Communication with Icecast2 is based on HTTP. Icecast2 implements HTTP/1.0 with a set of features from HTTP/1.1 and some usecase specific extensions. In addition Icecast2 may support other protocols such as ICY.</para>
        <section>
            <title>Protocol Specification</title>
            <para>All Icecast2 clients connect to Icecast2 using the same server address. Mountpoints and general web access uses administor provided resource names. The administration interface and API is available below the resource prefix "/admin".</para>
            <para>Icecast2 implements HTTP/1.0. It understands most HTTP/1.1 requests. If interpretation of a request fails Icecast2 will send a HTTP/1.0 error reply depending on the reason of failture. If Icecast2 can not assume a HTTP client or the error occurs in early stages of client handling Icecast2 may drop the connection without sending data to the client.</para>
            <section>
                <title>Error codes</title>
                <para>The server may respond with any <link xlink:href="https://tools.ietf.org/html/rfc7231#section-6">RFC 7231 Section 6</link> status code. Below is a incomplete list of important status codes:
                    <table>
                        <thead>
                            <row>
                                <entry>Code</entry>
                                <entry>Text</entry>
                                <entry>Description</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>100</entry>
                                <entry>Continue</entry>
                                <entry>Is sent if client requested it by adding the corresponding header to its request: <code>Expect: 100-continue</code>. See also Section <emphasis>100-continue</emphasis>.</entry>
                            </row>
                            <row>
                                <entry>101</entry>
                                <entry>Switching Protocols</entry>
                                <entry></entry>
                            </row>
                            <row>
                                <entry>200</entry>
                                <entry>OK</entry>
                                <entry>Sent after source client stopped</entry>
                            </row>
                            <row>
                                <entry>206</entry>
                                <entry>Partial Content</entry>
                                <entry></entry>
                            </row>
                            <row>
                                <entry>400</entry>
                                <entry>Bad Request</entry>
                                <entry></entry>
                            </row>
                            <row>
                                <entry>401</entry>
                                <entry>You need to authenticate</entry>
                                <entry>Authentication failed. See also Section <emphasis>Authentication</emphasis>.</entry>
                            </row>
                            <row>
                                <entry>401</entry>
                                <entry>Authentication Required</entry>
                                <entry></entry>
                            </row>
                            <row>
                                <entry>403</entry>
                                <entry>Content-type not supported</entry>
                                <entry>The supplied content type is not supported. See also Section <emphasis>Content Types</emphasis>.</entry>
                            </row>
                            <row>
                                <entry>403</entry>
                                <entry>No Content-type given</entry>
                                <entry>Header field <code>Content-Type</code> was not set but is mandatory. See also Section <emphasis>Content Types</emphasis>.</entry>
                            </row>
                            <row>
                                <entry>403</entry>
                                <entry>internal format allocation problem</entry>
                                <entry>There was a problem allocating the format handler, this is an internal Icecast problem.</entry>
                            </row>
                            <row>
                                <entry>403</entry>
                                <entry>too many sources connected</entry>
                                <entry>The Icecast instance' source client limit was reached. No more connections are allowed.</entry>
                            </row>
                            <row>
                                <entry>403</entry>
                                <entry>Mountpoint in use</entry>
                                <entry>The client tried to connect to an occupied mountpoint. That means, another client is connected already.</entry>
                            </row>
                            <row>
                                <entry>403</entry>
                                <entry>busy, please try again later</entry>
                                <entry></entry>
                            </row>
                            <row>
                                <entry>403</entry>
                                <entry>Icecast connection limit reached</entry>
                                <entry></entry>
                            </row>
                            <row>
                                <entry>403</entry>
                                <entry>Reached limit of concurrent connections on those credentials</entry>
                                <entry></entry>
                            </row>
                            <row>
                                <entry>403</entry>
                                <entry>Rejecting client for whatever reason</entry>
                                <entry></entry>
                            </row>
                            <row>
                                <entry>403</entry>
                                <entry>Forbidden</entry>
                                <entry></entry>
                            </row>
                            <row>
                                <entry>404</entry>
                                <entry>File Not Found</entry>
                                <entry></entry>
                            </row>
                            <row>
                                <entry>416</entry>
                                <entry>Request Range Not Satisfiable</entry>
                                <entry></entry>
                            </row>
                            <row>
                                <entry>426</entry>
                                <entry>Upgrade Required</entry>
                                <entry></entry>
                            </row>
                            <row>
                                <entry>500</entry>
                                <entry>Internal Server Error</entry>
                                <entry>An internal Icecast server error occured</entry>
                            </row>
                            <row>
                                <entry>501</entry>
                                <entry>Unimplemented</entry>
                                <entry></entry>
                            </row>
                        </tbody>
                    </table>
                </para>
            </section>
            <section>
                <title>Authentication</title>
                <para>Depending on operation and resource Icecast2 may require the client to authenticate. If such a resource is accessed in such a operation and no authentication data was sent along with the request Icecast2 will respond with the corresponding error status.</para>
                <para>Authentication is based on <link xlink:href="https://tools.ietf.org/html/rfc7617">RFC 7617</link>. The client must send a request with no authentication first. The server will include information in it's error response on how to provide authentication data correctly. This step may be skipped according to the rules in RFC 7617 only.</para>
                <para>The client must support the "Basic" authentication scheme.</para>
            </section>
            <section>
                <title>Transfer encodings</title>
                <para>Icecast2 supports diffrent transfer encodings for sending data to Icecast2. A client is free to choice any of what is supported by the server. An application must consider what transfer encodings are announced by the server.</para>
                <para>The transfer encoding is announced by the server using the <code>Accept-Encoding</code> HTTP header.</para>
                <table>
                    <thead>
                        <row>
                            <entry>Encoding</entry>
                            <entry>min. Icecast2 version</entry>
                            <entry>Comment</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>identity</entry>
                            <entry>Icecast2 2.0.0</entry>
                            <entry>This is the safe fallback.</entry>
                        </row>
                        <row>
                            <entry>chunked</entry>
                            <entry>Icecast2 2.5.0-beta.1</entry>
                            <entry></entry>
                        </row>
                    </tbody>
                </table>
                <warning>Prior to Icecast2 2.5.0-beta.1 the server did not return error in case a unsupported transfer encoding was used by the client. Those servers only support the "identity" encoding.</warning>
                <note>RFC 7230 removed the "identity" encoding from the standard. See <link xlink:href="https://tools.ietf.org/html/rfc7230#appendix-A.2">RFC 7230 Appendinx A.2</link> for details.</note>
                <tip>
                    <para>
                        When chunked is not used as outmost transfer encoding the client can half-close the connection to signal the end of the request if the transport supports half-closed connections.
                    </para>
                    <para>
                        On IEEE Std 1003.1 ("POSIX") systems this can be achieved calling <function>shutdown</function> with <constant>SHUT_WR</constant>.
                    </para>
                </tip>
            </section>
        </section>

        <section>
            <title>TLS</title>
            <para>Icecast2 has TLS support included. Available TLS versions and options depend on the actual deployment. The following modes are supported:
                <table>
                    <thead>
                        <row>
                            <entry>Mode</entry>
                            <entry>min. Icecast2 version</entry>
                            <entry>Comment</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>RFC 2817</entry>
                            <entry>Icecast2 2.3.2</entry>
                            <entry>HTTP over TLS</entry>
                        </row>
                        <row>
                            <entry>RFC 2818</entry>
                            <entry>Icecast2 2.5.0-beta.1</entry>
                            <entry>Upgrade to TLS within HTTP<footnote><para>This is similar to what other protocols call "STARTTLS".</para></footnote></entry>
                        </row>
                    </tbody>
                </table>
            </para>
            <note>Some older documentation may call TLS SSL.</note>
        </section>

        <section>
            <title>Content Types</title>
            <para>The following content types are support for streaming. Other content types my be used for non-streaming resources such as the administration interface and the API.</para>
            <table>
                <title>Mine Types</title>
                <thead>
                    <row>
                        <entry>Mime Type</entry>
                        <entry>Container</entry>
                        <entry>Codecs</entry>
                        <entry>min. Icecast2 version</entry>
                        <entry>Comment</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>application/x-ogg</entry>
                        <entry>Ogg</entry>
                        <entry><emphasis>See application/ogg</emphasis></entry>
                        <entry>Icecast2 2.0.0</entry>
                        <entry>For backwards compatibility only. Do not use in new applications.</entry>
                    </row>
                    <row>
                        <entry>application/ogg</entry>
                        <entry>Ogg</entry>
                        <entry>Vorbis, Opus, FLAC, Speex, MIDI, Theora, Kate, Skeleton</entry>
                        <entry>Icecast2 2.3.2</entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>audio/ogg</entry>
                        <entry>Ogg</entry>
                        <entry>Vorbis, Opus, FLAC, Speex, MIDI, Skeleton</entry>
                        <entry>Icecast2 2.3.2</entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>video/ogg</entry>
                        <entry>Ogg</entry>
                        <entry>Vorbis, Opus, FLAC, Speex, MIDI, Theora, Kate, Skeleton</entry>
                        <entry>Icecast2 2.3.2</entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>audio/webm</entry>
                        <entry>WebM</entry>
                        <entry><emphasis>Any as per WebM specification</emphasis></entry>
                        <entry>Icecast2 2.4.0-beta.1</entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>video/webm</entry>
                        <entry>WebM</entry>
                        <entry><emphasis>Any as per WebM specification</emphasis></entry>
                        <entry>Icecast2 2.4.0-beta.1</entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>audio/x-matroska</entry>
                        <entry>Matroska</entry>
                        <entry><emphasis>Any as per Matroska specification</emphasis></entry>
                        <entry>Icecast2 2.4.0-beta.1</entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>video/x-matroska</entry>
                        <entry>Matroska</entry>
                        <entry><emphasis>Any as per Matroska specification</emphasis></entry>
                        <entry>Icecast2 2.4.0-beta.1</entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>video/x-matroska-3d</entry>
                        <entry>Matroska</entry>
                        <entry><emphasis>Any as per Matroska specification</emphasis></entry>
                        <entry>Icecast2 2.4.0-beta.1</entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>audio/mpeg</entry>
                        <entry>MP3</entry>
                        <entry><emphasis>ignored</emphasis></entry>
                        <entry>Icecast2 2.0.0</entry>
                        <entry>Handled as <emphasis>any other</emphasis> since Icecast2 2.2.0.</entry>
                    </row>
                    <row>
                        <entry><emphasis>any other</emphasis></entry>
                        <entry>MP3, AAC, NSV</entry>
                        <entry><emphasis>ignored</emphasis></entry>
                        <entry>Icecast2 2.2.0</entry>
                        <entry>Deprecated. Handled using a generic format handler.</entry>
                    </row>
                </tbody>
            </table>
            <table>
                <title>Codecs</title>
                <thead>
                    <row>
                        <entry>Codec</entry>
                        <entry>Containers</entry>
                        <entry>min. Icecast2 version</entry>
                        <entry>Comment</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>Vorbis</entry>
                        <entry>Ogg, WebM, Matroska</entry>
                        <entry></entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>Opus</entry>
                        <entry>Ogg, WebM, Matroska</entry>
                        <entry></entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>FLAC</entry>
                        <entry>Ogg</entry>
                        <entry></entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>Speex</entry>
                        <entry>Ogg</entry>
                        <entry></entry>
                        <entry>Deprecated.</entry>
                    </row>
                    <row>
                        <entry>MIDI</entry>
                        <entry>Ogg</entry>
                        <entry></entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>Theora</entry>
                        <entry>Ogg</entry>
                        <entry></entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>Kate</entry>
                        <entry>Ogg</entry>
                        <entry></entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry>Skeleton</entry>
                        <entry>Ogg</entry>
                        <entry></entry>
                        <entry></entry>
                    </row>
                    <row>
                        <entry><emphasis>any other</emphasis></entry>
                        <entry>WebM, Matroska</entry>
                        <entry></entry>
                        <entry>Supported as per container specification.</entry>
                    </row>
                </tbody>
            </table>
        </section>
    </chapter>
    <chapter>
        <title>Ingesting Source Streams to Icecast2</title>
        <para>Ingesting source streams to Icecast2 is implemented by sending a HTTP PUT to the mountpoint of the given stream. The server will then try to create the stream automatically based on the provided data and it's configuration.</para>
        <note>HTTP PUT was implemented in Icecast2 2.4.0-beta.2. Before that a custom extension was used using the HTTP method "SOURCE".</note>
        <section>
            <title>Protocol Specification</title>
            <section>
                <title>Overview</title>
                <para>Sending data to the server is done by:
                    <orderedlist>
                        <listitem><para>Optionally a TLS connection is established between client and server.</para></listitem>
                        <listitem><para>A PUT request is sent by the client without authentication data.</para></listitem>
                        <listitem><para>Optionally the server may refuse the request if authentication is required. The client then repeats the request with authentication data provided.</para></listitem>
                        <listitem><para>Optionally the server replies with a 100-continue message.</para></listitem>
                        <listitem><para>The client sends the stream in negotiated transfer encoding.</para></listitem>
                        <listitem><para>The server replies with a final 200-OK.</para></listitem>
                        <listitem><para>Client and server terminate the connection.</para></listitem>
                    </orderedlist>
                </para>
            </section>
            <section xml:id="S100continue">
                <title xml:id="S100continue.title">100-continue</title>
                <para>The client should ask the server to send a 100-continue reply. This allows the server to reject the stream cleanly in case there is any problem. Such problems could be e.g. missmatch of credentials or unsupported parameters. Then the 100-continue reply is requested the server may reply with a 100-continue. The client should wait a resonable long time before starting to provide data if no reply has been received yet.</para>
                <para>The 100-continue reply is requested by adding the following header to the request header:</para>
                <programlisting>Expect: 100-continue</programlisting>
                <warning>Up to Icecast2 2.4.3 there is a bug that causes the TLS connection to be abnormally terminated when using 100-continue and TLS. This has been fixed in Icecast2 2.4.4 and 2.5.0-beta.2.</warning>
            </section>
        </section>

        <section>
            <title>Examples</title>
        </section>
    </chapter>
    <chapter>
        <title>Accessing a Icecast2 stream as listener</title>
        <section>
            <title>Protocol Specification</title>
        </section>

        <section>
            <title>Examples</title>
        </section>
    </chapter>
    <chapter>
        <title>Accessing administration interface and API</title>
    </chapter>
    <chapter>
        <title>Tested and Certified Source Clients</title>
    </chapter>
</book>
